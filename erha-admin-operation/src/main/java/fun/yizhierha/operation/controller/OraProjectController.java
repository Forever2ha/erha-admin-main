package fun.yizhierha.operation.controller;

import fun.yizhierha.common.annotation.Log;
import fun.yizhierha.common.base.BaseErrDto;
import fun.yizhierha.common.exception.BizCodeEnum;
import fun.yizhierha.common.utils.ValidUtils;
import fun.yizhierha.common.utils.*;
import fun.yizhierha.operation.domain.OraProject;
import fun.yizhierha.operation.domain.vo.CreateOraProjectVo;
import fun.yizhierha.operation.domain.vo.UpdateOraProjectVo;
import fun.yizhierha.operation.domain.vo.RetrieveOraProjectVo;

import fun.yizhierha.operation.service.OraProjectService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.security.access.prepost.PreAuthorize;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import lombok.RequiredArgsConstructor;

import javax.servlet.http.HttpServletResponse;
import java.util.List;
import java.util.Set;

/** generated by EH-Admin
* @author xaopohi
* @date Wed Dec 21 00:05:47 CST 2022
**/
@Api(tags = "运维管理:项目管理")
@RestController
@RequestMapping("/api/operation/project")
@RequiredArgsConstructor
public class OraProjectController{

    private final OraProjectService oraProjectService;

    @ApiOperation("获取项目管理")
    @Log("获取项目管理")
    @GetMapping
    @PreAuthorize("@eh.check('operation:oraProject:list')")
    public R<PageUtils<OraProject>> list(RetrieveOraProjectVo retrieveOraProjectVo, Query.PageVo pageVo){
        PageUtils<OraProject> res = oraProjectService.list(retrieveOraProjectVo,pageVo);
        return R.<PageUtils<OraProject>>ok().setData(res);
    }

    @ApiOperation("新增项目管理")
    @Log("新增项目管理")
    @PostMapping
    @PreAuthorize("@eh.check('operation:oraProject:add')")
    public R<List<BaseErrDto>> add(@Validated @RequestBody CreateOraProjectVo createOraProjectVo,
        BindingResult bindingResult){
        List<BaseErrDto> errDtoList = ValidUtils.getBaseErrDtoByBindingRes(bindingResult);
        if (errDtoList.isEmpty()){
            oraProjectService.save(createOraProjectVo);
            return R.ok();
        }
        return R.<List<BaseErrDto>>error(
                BizCodeEnum.Client_Error_CRUD.getCode(), BizCodeEnum.Client_Error_CRUD.getMsg()
        ).setData(errDtoList);
    }

    @ApiOperation("修改项目管理")
    @Log("修改项目管理")
    @PutMapping
    @PreAuthorize("@eh.check('operation:oraProject:edit')")
    public R<List<BaseErrDto>> edit(@Validated @RequestBody ValidList<UpdateOraProjectVo> updateOraProjectList,
                    BindingResult bindingResult){
        List<BaseErrDto> errDtoList = ValidUtils.getBaseErrDtoByBindingRes(updateOraProjectList, bindingResult);
        if (errDtoList.isEmpty()) {
            oraProjectService.edit(updateOraProjectList,errDtoList);
            if (errDtoList.isEmpty()){
                return R.ok();
            }else {
                return  R.<List<BaseErrDto>>error(
                        BizCodeEnum.Client_Error_CRUD.getCode(),
                        BizCodeEnum.Client_Error_CRUD.getMsg()
                ).setData(errDtoList);
            }
        }
        return  R.<List<BaseErrDto>>error(
                BizCodeEnum.Client_Error_CRUD.getCode(),
                BizCodeEnum.Client_Error_CRUD.getMsg()
        ).setData(errDtoList);
    }

    @ApiOperation("删除项目管理")
    @Log("删除项目管理")
    @DeleteMapping
    @PreAuthorize("@eh.check('operation:oraProject:del')")
    public R del(@RequestBody Set<Long> ids){
        oraProjectService.remove(ids);
        return R.ok();
    }

    @ApiOperation("导出数据")
    @Log("导出数据")
    @GetMapping("/download")
    @PreAuthorize("@eh.check('operation:oraProject:list')")
    public void download(HttpServletResponse response){
        oraProjectService.download(response);
    }

}