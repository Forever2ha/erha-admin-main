package fun.yizhierha.operation.service.impl;

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.core.metadata.IPage;
import com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;
import fun.yizhierha.common.base.BaseErrDto;
import fun.yizhierha.common.exception.BadRequestException;
import fun.yizhierha.common.exception.BizCodeEnum;
import fun.yizhierha.common.utils.PageUtils;
import fun.yizhierha.common.utils.Query;
import fun.yizhierha.common.utils.ValidList;
import fun.yizhierha.common.utils.file.ExcelUtils;
import fun.yizhierha.operation.domain.OraProject;
import fun.yizhierha.operation.domain.vo.CreateOraProjectVo;
import fun.yizhierha.operation.domain.vo.UpdateOraProjectVo;
import fun.yizhierha.operation.domain.vo.RetrieveOraProjectVo;
import fun.yizhierha.operation.mapper.OraProjectMapper;
import fun.yizhierha.operation.service.mapstruct.OraProjectMapstruct;
import fun.yizhierha.operation.service.OraProjectService;
import org.springframework.stereotype.Service;
import lombok.RequiredArgsConstructor;
import org.springframework.transaction.annotation.Transactional;

import java.sql.Timestamp;
import java.util.*;
import javax.servlet.http.HttpServletResponse;

/** generated by EH-Admin
* @author xaopohi
* @date Wed Dec 21 00:05:47 CST 2022
**/
@Service
@RequiredArgsConstructor
public class OraProjectServiceImpl extends ServiceImpl<OraProjectMapper, OraProject> implements OraProjectService{

    private final OraProjectMapstruct oraProjectMapstruct;

    @Override
    public PageUtils<OraProject> list(RetrieveOraProjectVo retrieveOraProjectVo, Query.PageVo pageVo) {
        QueryWrapper<OraProject> wrapper = new QueryWrapper<>();



        IPage<OraProject> iPage = baseMapper.selectPage(new Query<OraProject>().getPage(pageVo), wrapper);
        return new PageUtils<>(iPage);
    }

    @Override
    public synchronized void save(CreateOraProjectVo createOraProjectVo) {
        // 1.字段为UNI，需要不重复
        // 2.映射数据
        OraProject oraProject = oraProjectMapstruct.toOraProject(createOraProjectVo);
        // 3.保存    
        this.save(oraProject);
    }

    @Transactional(rollbackFor = Exception.class)
    @Override
    public synchronized void edit(ValidList<UpdateOraProjectVo> updateOraProjectVoList, List<BaseErrDto> errDtoList) {
        List<OraProject> toUpdateOraProjectList = new ArrayList<>();

        for (UpdateOraProjectVo updateOraProjectVo : updateOraProjectVoList) {
            Long id = updateOraProjectVo.getId();
            // 1.字段为UNI，需要不重复

            OraProject oraProject = oraProjectMapstruct.toOraProject(updateOraProjectVo);

            toUpdateOraProjectList.add(oraProject);
        }

        // 2.更新
        this.updateBatchById(toUpdateOraProjectList);
    }

    @Override
    public void remove(Set<Long> ids) {
        this.removeByIds(ids);
    }

    @Override
    public void download(HttpServletResponse response) {
        ExcelUtils.export(response,"项目管理信息表",this.list(), OraProject.class);
    }

}